{
  "openapi": "3.0.0",
  "info": {
    "title": "Calendar App API",
    "description": "API documentation for the Event management system and User authentication",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "paths": {
    "/events": {
      "get": {
        "summary": "Get all events",
        "tags": ["Events"],
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new event",
        "tags": ["Events"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Error creating event"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Get event by ID",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "delete": {
        "summary": "Delete event by ID",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "patch": {
        "summary": "Update event by ID",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch users"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid username or password"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error registering user"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to logout"
          }
        }
      }
    },
    "/todos": {
      "get": {
        "summary": "Get all todos",
        "tags": ["Todos"],
        "responses": {
          "200": {
            "description": "A list of todos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Todo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new todo",
        "tags": ["Todos"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "404": {
            "description": "Error creating todo"
          }
        }
      }
    },
    "/todos/{id}": {
      "get": {
        "summary": "Get todo by ID",
        "tags": ["Todos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found"
          }
        }
      },
      "delete": {
        "summary": "Delete todo by ID",
        "tags": ["Todos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found"
          }
        }
      },
      "patch": {
        "summary": "Update todo by ID",
        "tags": ["Todos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Authenticate with Google",
        "description": "Redirects the user to Google for authentication.",
        "operationId": "authGoogle",
        "produces": [
          "application/json"
        ],
        "responses": {
          "302": {
            "description": "Redirect to Google authentication page."
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Google Authentication Callback",
        "description": "Handles the callback from Google authentication and stores the tokens.",
        "operationId": "authGoogleCallback",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Authorization code returned by Google.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful message.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/sync": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Sync Calendar Events",
        "description": "Syncs the user's calendar events and returns a list of upcoming events.",
        "operationId": "syncCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tokens",
            "in": "body",
            "description": "OAuth2 tokens for Google Calendar API access.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                },
                "token_type": {
                  "type": "string"
                },
                "expiry_date": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of upcoming events.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "start": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "end": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "required": [
          "user",
          "event",
          "tag",
          "startTime",
          "endTime",
          "creationTime",
          "creationUser"
        ],
        "properties": {
          "user": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creationUser": {
            "type": "string",
            "description": "ID of the user who created the event"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Todo": {
        "type": "object",
        "properties": {
          "todo": {
            "type": "string",
            "description": "Description of the todo"
          },
          "user": {
            "type": "string",
            "description": "ID of the user associated with the todo"
          },
          "type": {
            "type": "string",
            "description": "Type/category of the todo"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Due date/time of the todo"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes for the todo"
          },
          "checked": {
            "type": "boolean",
            "description": "Status of completion of the todo"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date/time of the todo"
          },
          "creationUser": {
            "type": "string",
            "description": "ID of the user who created the todo"
          }
        },
        "required": [
          "todo",
          "user",
          "type",
          "date",
          "checked",
          "creationTime",
          "creationUser"
        ]
      },
      "Calendar": {
        "type": "object",
        "required": [
          "user",
          "name",
          "color",
          "description",
          "creationTime",
          "creationUser"
        ],
        "properties": {
          "user": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creationUser": {
            "type": "string",
            "description": "ID of the user who created the calendar"
          }
        }
      }
    }
  }
}
